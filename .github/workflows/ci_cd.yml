name: Deploy to S3

on:
  push:
    branches:
      - main
      - destroy

jobs:
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve

    - name: Sync files to S3
      run: |
        aws s3 cp site/index.html s3://formacao-devops-bruno-oliver/index.html
        aws s3 cp site/error.html s3://formacao-devops-bruno-oliver/error.html
        aws s3 cp site/logos/terraform.png s3://formacao-devops-bruno-oliver/logos/terraform.png
        aws s3 cp site/logos/aws.png s3://formacao-devops-bruno-oliver/logos/aws.png
        aws s3 cp site/logos/github-actions.png s3://formacao-devops-bruno-oliver/logos/github-actions.png

  destroy:
    if: github.ref == 'refs/heads/destroy'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Destroy
      run: terraform destroy -auto-approve